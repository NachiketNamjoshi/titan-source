android.support.v4.util.LruCache -> a:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int createCount -> d
    int evictionCount -> e
    int hitCount -> f
    int missCount -> g
    java.lang.Object get(java.lang.Object) -> a
    void trimToSize(int) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> a
    int sizeOf$2838e5a0(java.lang.Object) -> c
    java.lang.String toString() -> toString
android.support.v4.view.EdgeEffectCompat -> android.support.v4.view.EdgeEffectCompat:
    android.widget.EdgeEffect mEdge -> a
    void onPull(float) -> a
    void finish() -> a
    boolean isFinished() -> b
    void onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
    void setSize(int,int) -> a
    int getOverScrollMode(android.view.View) -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.PagerAdapter -> b:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem$30510aeb(android.view.ViewGroup,java.lang.Object) -> a
    void setPrimaryItem$30510aeb(int) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void onPageSelected(int) -> b
    android.os.Parcelable saveState() -> b
    void restoreState$2cb49ec(android.os.Parcelable) -> a
    int getItemPosition(java.lang.Object) -> a
    java.lang.CharSequence getPageTitle(int) -> c
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    android.support.v4.view.ViewPager$PagerObserver mObserver -> k
    int mChildWidthMeasureSpec -> l
    int mChildHeightMeasureSpec -> m
    boolean mInLayout -> n
    boolean mScrollingCacheEnabled -> o
    boolean mPopulatePending -> p
    boolean mScrolling -> q
    int mOffscreenPageLimit -> r
    boolean mIsBeingDragged -> s
    boolean mIsUnableToDrag -> t
    int mTouchSlop -> u
    float mInitialMotionX -> v
    float mLastMotionX -> w
    float mLastMotionY -> x
    int mActivePointerId -> y
    android.view.VelocityTracker mVelocityTracker -> z
    int mMinimumVelocity -> A
    int mMaximumVelocity -> B
    int mFlingDistance -> C
    android.support.v4.view.EdgeEffectCompat mLeftEdge -> D
    android.support.v4.view.EdgeEffectCompat mRightEdge -> E
    boolean mFirstLayout -> F
    boolean mCalledSuper -> G
    int mDecorChildCount -> H
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> I
    int mScrollState -> J
    void initViewPager() -> e
    void setScrollState(int) -> b
    void setAdapter(android.support.v4.view.PagerAdapter) -> a
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setCurrentItem(int) -> a
    void setCurrentItem$2563266(int) -> c
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void addNewItem(int,int) -> a
    void dataSetChanged() -> c
    void populate() -> f
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> d
    void completeScroll() -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> e
    boolean pageLeft() -> i
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$0() -> d
android.support.v4.view.ViewPager$1 -> c:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> d:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> e:
android.support.v4.view.ViewPager$ItemInfo -> f:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    long getPlaylist(android.content.ContentResolver,java.lang.String) -> a
    void deletePlaylist(android.content.ContentResolver,long) -> a
android.support.v4.view.ViewPager$LayoutParams -> g:
    boolean isDecor -> a
    int gravity -> b
android.support.v4.view.ViewPager$OnPageChangeListener -> h:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> b
    void onPageScrollStateChanged(int) -> d
android.support.v4.view.ViewPager$PagerObserver -> i:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> j:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.nachiket.titan.Action -> k:
    com.nachiket.titan.Action Nothing -> a
    com.nachiket.titan.Action Library -> b
    com.nachiket.titan.Action PlayPause -> c
    com.nachiket.titan.Action NextSong -> d
    com.nachiket.titan.Action PreviousSong -> e
    com.nachiket.titan.Action NextAlbum -> f
    com.nachiket.titan.Action PreviousAlbum -> g
    com.nachiket.titan.Action Repeat -> h
    com.nachiket.titan.Action Shuffle -> i
    com.nachiket.titan.Action EnqueueAlbum -> j
    com.nachiket.titan.Action EnqueueArtist -> k
    com.nachiket.titan.Action EnqueueGenre -> l
    com.nachiket.titan.Action ClearQueue -> m
    com.nachiket.titan.Action ToggleControls -> n
    com.nachiket.titan.Action[] ENUM$VALUES -> o
    com.nachiket.titan.Action getAction(android.content.SharedPreferences,java.lang.String,com.nachiket.titan.Action) -> a
    com.nachiket.titan.Action[] values() -> a
com.nachiket.titan.ActionBarControls -> com.nachiket.titan.ActionBarControls:
    void onMeasure(int,int) -> onMeasure
com.nachiket.titan.CompatEq -> l:
    android.media.audiofx.Equalizer mEq -> a
com.nachiket.titan.CompatFroyo -> m:
    com.nachiket.titan.CompatFroyo sAudioFocus -> a
    void registerMediaButtonEventReceiver(android.media.AudioManager,android.content.ComponentName) -> a
    void unregisterMediaButtonEventReceiver(android.media.AudioManager,android.content.ComponentName) -> b
    void dataChanged(android.content.Context) -> a
    void createAudioFocus() -> a
    void requestAudioFocus(android.media.AudioManager) -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
    float getXVelocity(android.view.VelocityTracker,int) -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
com.nachiket.titan.CompatHoneycomb$1 -> n:
    com.nachiket.titan.LibraryActivity mActivity -> a
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
com.nachiket.titan.CompatIcs -> o:
    android.media.RemoteControlClient sRemote -> a
com.nachiket.titan.CompatMetadata -> p:
    android.media.MediaMetadataRetriever mData -> a
    java.lang.String extractMetadata(int) -> a
com.nachiket.titan.CoverBitmap -> q:
    int TEXT_SIZE -> a
    int TEXT_SIZE_BIG -> b
    int PADDING -> c
    int TEXT_SPACE -> d
    android.graphics.Bitmap SONG_ICON -> e
    android.graphics.Bitmap ALBUM_ICON -> f
    android.graphics.Bitmap ARTIST_ICON -> g
    void loadTextSizes(android.content.Context) -> a
    void drawText(android.graphics.Canvas,java.lang.String,int,int,int,int,android.graphics.Paint) -> a
    android.graphics.Bitmap createBitmap(android.content.Context,int,android.graphics.Bitmap,com.nachiket.titan.Song,int,int) -> a
    android.graphics.Bitmap generateDefaultCover(int,int) -> a
com.nachiket.titan.CoverView -> com.nachiket.titan.CoverView:
    int sSnapVelocity -> a
    double sDensity -> b
    android.os.Handler mHandler -> c
    android.os.Handler mUiHandler -> d
    int mCoverStyle -> e
    com.nachiket.titan.CoverView$Callback mCallback -> f
    com.nachiket.titan.Song[] mSongs -> g
    android.graphics.Bitmap[] mBitmaps -> h
    android.graphics.Bitmap[] mActiveBitmaps -> i
    android.graphics.Bitmap mDefaultCover -> j
    android.widget.Scroller mScroller -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mLastMotionX -> m
    float mLastMotionY -> n
    float mStartX -> o
    float mStartY -> p
    boolean mIgnoreNextUp -> q
    boolean mPendingQuery -> r
    int mScrollX -> s
    boolean mScrolling -> t
    void setup(android.os.Looper,com.nachiket.titan.CoverView$Callback,int) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setSong(int,com.nachiket.titan.Song) -> a
    void querySongs(com.nachiket.titan.PlaybackService) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onMeasure(int,int) -> onMeasure
com.nachiket.titan.CoverView$Callback -> r:
    void shiftCurrentSong(int) -> a
    void upSwipe() -> a
    void downSwipe() -> b
com.nachiket.titan.DragListView -> com.nachiket.titan.DragListView:
    android.os.Handler mHandler -> a
    android.view.WindowManager mWindowManager -> b
    com.nachiket.titan.DragListView$DragAdapter mAdapter -> c
    boolean mEditable -> d
    int mRowHeight -> e
    android.widget.ImageView mDragView -> f
    android.graphics.Bitmap mDragBitmap -> g
    android.view.WindowManager$LayoutParams mWindowParams -> h
    int mDragPos -> i
    int mSrcDragPos -> j
    int mDragPointY -> k
    int mYOffset -> l
    int mLastMotionY -> m
    int mPadding -> n
    void setAdapter(com.nachiket.titan.DragListView$DragAdapter) -> a
    void setEditable(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int computeDragPosition(int) -> a
    void stopDragging() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.nachiket.titan.DragListView$DragAdapter -> s:
    void move(int,int) -> a
com.nachiket.titan.DragTextView -> com.nachiket.titan.DragTextView:
    android.graphics.Paint mPaint -> a
    boolean mChecked -> b
    android.graphics.drawable.Drawable mCheckMarkDrawable -> c
    int mHeight -> d
    int[] CHECKED_STATE_SET -> e
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void drawableStateChanged() -> drawableStateChanged
    void onMeasure(int,int) -> onMeasure
com.nachiket.titan.FileSystemAdapter -> t:
    java.util.regex.Pattern SPACE_SPLIT -> c
    java.util.regex.Pattern FILE_SEPARATOR -> d
    com.nachiket.titan.LibraryActivity mActivity -> a
    android.view.LayoutInflater mInflater -> e
    com.nachiket.titan.Limiter mLimiter -> f
    java.io.File[] mFiles -> g
    android.graphics.drawable.Drawable mFolderIcon -> h
    java.lang.String[] mFilter -> b
    java.io.FilenameFilter mFileFilter -> i
    java.util.Comparator mFileComparator -> j
    com.nachiket.titan.FileSystemAdapter$Observer mFileObserver -> k
    java.lang.Object query() -> a
    void commitQuery(java.lang.Object) -> a
    void clear() -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setFilter(java.lang.String) -> a
    void setLimiter(com.nachiket.titan.Limiter) -> a
    com.nachiket.titan.Limiter getLimiter() -> c
    com.nachiket.titan.Limiter buildLimiter(java.io.File) -> a
    com.nachiket.titan.Limiter buildLimiter(long) -> a
    int getMediaType() -> d
    android.content.Intent createData(android.view.View) -> a
    void onClick(android.view.View) -> onClick
com.nachiket.titan.FileSystemAdapter$1 -> u:
    com.nachiket.titan.FileSystemAdapter this$0 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.nachiket.titan.FileSystemAdapter$2 -> v:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nachiket.titan.FileSystemAdapter$Observer -> w:
    com.nachiket.titan.FileSystemAdapter this$0 -> a
    void onEvent(int,java.lang.String) -> onEvent
com.nachiket.titan.FileSystemAdapter$ViewHolder -> x:
    int id -> a
    android.widget.TextView text -> b
    android.view.View divider -> c
    android.widget.ImageView arrow -> d
com.nachiket.titan.FourLongWidget -> com.nachiket.titan.FourLongWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.nachiket.titan.Song,int) -> a
com.nachiket.titan.FourSquareWidget -> com.nachiket.titan.FourSquareWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.nachiket.titan.Song,int) -> a
com.nachiket.titan.FourWhiteWidget -> com.nachiket.titan.FourWhiteWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.nachiket.titan.Song,int) -> a
com.nachiket.titan.FullPlaybackActivity -> com.nachiket.titan.FullPlaybackActivity:
    android.widget.TextView mOverlayText -> a
    android.view.View mControlsTop -> b
    android.view.View mControlsBottom -> c
    android.widget.SeekBar mSeekBar -> l
    android.widget.TableLayout mInfoTable -> m
    android.widget.TextView mElapsedView -> n
    android.widget.TextView mDurationView -> o
    android.widget.TextView mQueuePosView -> p
    android.widget.TextView mTitle -> q
    android.widget.TextView mAlbum -> r
    android.widget.TextView mArtist -> s
    boolean mControlsVisible -> t
    boolean mExtraInfoVisible -> u
    long mDuration -> v
    boolean mSeekBarTracking -> w
    boolean mPaused -> x
    int mDisplayMode -> y
    com.nachiket.titan.Action mCoverPressAction -> z
    com.nachiket.titan.Action mCoverLongPressAction -> A
    java.lang.StringBuilder mTimeBuilder -> B
    com.nachiket.titan.Song mCurrentSong -> C
    java.lang.String mGenre -> D
    android.widget.TextView mGenreView -> E
    java.lang.String mTrack -> F
    android.widget.TextView mTrackView -> G
    java.lang.String mYear -> H
    android.widget.TextView mYearView -> I
    java.lang.String mComposer -> J
    android.widget.TextView mComposerView -> K
    java.lang.String mFormat -> L
    android.widget.TextView mFormatView -> M
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void showOverlayMessage(int) -> c
    void onStateChange(int,int) -> a
    void onSongChange(com.nachiket.titan.Song) -> a
    void updateQueuePosition() -> e
    void onPositionInfoChanged() -> c
    void setDuration(long) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onSearchRequested() -> onSearchRequested
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void updateElapsedTime() -> f
    void setControlsVisible(boolean) -> a
    void setExtraInfoVisible(boolean) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void performAction(com.nachiket.titan.Action) -> a
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
com.nachiket.titan.IdlePreference -> com.nachiket.titan.IdlePreference:
    int mValue -> a
    android.widget.TextView mValueText -> b
    java.lang.CharSequence getSummary() -> getSummary
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    java.lang.String formatTime(int) -> a
    void updateText() -> a
    void onDialogClosed(boolean) -> onDialogClosed
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.nachiket.titan.LibraryActivity -> com.nachiket.titan.LibraryActivity:
    int[] modeForAction -> l
    android.support.v4.view.ViewPager mViewPager -> a
    com.viewpagerindicator.TabPageIndicator mTabs -> m
    android.view.View mSearchBox -> n
    boolean mSearchBoxVisible -> o
    android.widget.TextView mTextFilter -> p
    android.view.View mClearButton -> q
    android.view.View mActionControls -> r
    android.view.View mControls -> s
    android.widget.TextView mTitle -> t
    android.widget.TextView mArtist -> u
    android.widget.ImageView mCover -> v
    android.view.View mEmptyQueue -> w
    android.widget.HorizontalScrollView mLimiterScroller -> x
    android.view.ViewGroup mLimiterViews -> y
    int mDefaultAction -> z
    int mLastAction -> A
    long mLastActedId -> B
    com.nachiket.titan.LibraryPagerAdapter mPagerAdapter -> b
    com.nachiket.titan.LibraryAdapter mCurrentAdapter -> C
    boolean mFakeTarget -> c
    android.content.pm.ApplicationInfo mFakeInfo -> D
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void loadTabOrder() -> e
    void checkForLaunch(android.content.Intent) -> c
    void loadAlbumIntent(android.content.Intent) -> d
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void updateHeaders() -> f
    void pickSongs(android.content.Intent,int) -> a
    void expand(android.content.Intent) -> e
    void openPlaybackActivity() -> g
    void onItemClicked(android.content.Intent) -> a
    void onItemExpanded(android.content.Intent) -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void updateLimiterViews() -> h
    void onClick(android.view.View) -> onClick
    void setLimiter(int,java.lang.String) -> a
    com.nachiket.titan.QueryTask buildQueryFromIntent(android.content.Intent,boolean,boolean) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.content.Intent) -> a
    void addToPlaylist(long,android.content.Intent) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean handleMessage(android.os.Message) -> handleMessage
    void onMediaChange() -> d
    void setSearchBoxVisible(boolean) -> a
    void onStateChange(int,int) -> a
    void onSongChange(com.nachiket.titan.Song) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onPageChanged(int,com.nachiket.titan.LibraryAdapter) -> a
    android.content.pm.ApplicationInfo getApplicationInfo() -> getApplicationInfo
com.nachiket.titan.LibraryAdapter -> y:
    int getMediaType() -> d
    com.nachiket.titan.Limiter getLimiter() -> c
    com.nachiket.titan.Limiter buildLimiter(long) -> a
    void setFilter(java.lang.String) -> a
    java.lang.Object query() -> a
    void commitQuery(java.lang.Object) -> a
    void clear() -> b
    android.content.Intent createData(android.view.View) -> a
com.nachiket.titan.LibraryPagerAdapter -> z:
    int[] TITLES -> b
    int[] DEFAULT_ORDER -> c
    int[] mTabOrder -> d
    int mTabCount -> j
    android.widget.ListView[] mLists -> k
    com.nachiket.titan.LibraryAdapter[] mAdapters -> e
    boolean[] mRequeryNeeded -> l
    com.nachiket.titan.MediaAdapter mArtistAdapter -> m
    com.nachiket.titan.MediaAdapter mAlbumAdapter -> n
    com.nachiket.titan.MediaAdapter mSongAdapter -> o
    com.nachiket.titan.MediaAdapter mPlaylistAdapter -> f
    com.nachiket.titan.MediaAdapter mGenreAdapter -> p
    com.nachiket.titan.FileSystemAdapter mFilesAdapter -> q
    com.nachiket.titan.LibraryAdapter mCurrentAdapter -> r
    int mCurrentPage -> s
    com.nachiket.titan.Limiter mPendingAlbumLimiter -> t
    com.nachiket.titan.Limiter mPendingSongLimiter -> u
    com.nachiket.titan.Limiter mPendingFileLimiter -> v
    int[] mSavedPositions -> w
    com.nachiket.titan.LibraryActivity mActivity -> x
    android.os.Handler mUiHandler -> y
    android.os.Handler mWorkerHandler -> z
    java.lang.String mHeaderText -> A
    android.widget.TextView mArtistHeader -> B
    android.widget.TextView mAlbumHeader -> C
    android.widget.TextView mSongHeader -> D
    java.lang.String mFilter -> E
    int mSongsPosition -> F
    int mAlbumsPosition -> g
    int mArtistsPosition -> h
    int mGenresPosition -> i
    android.database.ContentObserver mPlaylistObserver -> G
    boolean loadTabOrder() -> c
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    int getItemPosition(java.lang.Object) -> a
    void destroyItem$30510aeb(android.view.ViewGroup,java.lang.Object) -> a
    java.lang.CharSequence getPageTitle(int) -> c
    int getCount() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void setPrimaryItem$30510aeb(int) -> a
    void restoreState$2cb49ec(android.os.Parcelable) -> a
    android.os.Parcelable saveState() -> b
    void setHeaderText(java.lang.String) -> a
    void clearLimiter(int) -> e
    int setLimiter(com.nachiket.titan.Limiter) -> a
    com.nachiket.titan.Limiter getCurrentLimiter() -> d
    boolean handleMessage(android.os.Message) -> handleMessage
    void requestRequery(com.nachiket.titan.LibraryAdapter) -> b
    void postRequestRequery(com.nachiket.titan.LibraryAdapter) -> a
    void postRunQuery(com.nachiket.titan.LibraryAdapter) -> c
    void requeryIfNeeded(int) -> g
    void invalidateData() -> e
    void loadSortOrder(com.nachiket.titan.MediaAdapter) -> a
    void setSortMode(int) -> f
    void setFilter(java.lang.String) -> b
    void onPageScrollStateChanged(int) -> d
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> b
    android.content.Intent createHeaderIntent(android.view.View) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void enableFastScroll(android.widget.ListView) -> a
com.nachiket.titan.LibraryPagerAdapter$1 -> aa:
    com.nachiket.titan.LibraryPagerAdapter this$0 -> a
    void onChange(boolean) -> onChange
com.nachiket.titan.Limiter -> ab:
    int type -> a
    java.lang.String[] names -> b
    java.lang.Object data -> c
com.nachiket.titan.ListPreferenceSummary -> com.nachiket.titan.ListPreferenceSummary:
    java.lang.CharSequence getSummary() -> getSummary
    void onDialogClosed(boolean) -> onDialogClosed
com.nachiket.titan.MediaAdapter -> ac:
    java.util.regex.Pattern SPACE_SPLIT -> a
    com.nachiket.titan.LibraryActivity mActivity -> b
    android.view.LayoutInflater mInflater -> c
    android.database.Cursor mCursor -> d
    int mType -> e
    android.net.Uri mStore -> f
    java.lang.String[] mFields -> g
    java.lang.String[] mFieldKeys -> h
    java.lang.String[] mProjection -> i
    com.nachiket.titan.Limiter mLimiter -> j
    java.lang.String mConstraint -> k
    com.nachiket.titan.MusicAlphabetIndexer mIndexer -> l
    java.lang.Object[] mSections -> m
    java.lang.String mSongSort -> n
    int[] mSortEntries -> o
    java.lang.String[] mSortValues -> p
    int mSortMode -> q
    boolean mExpandable -> r
    void setExpandable(boolean) -> a
    void setFilter(java.lang.String) -> a
    com.nachiket.titan.QueryTask buildQuery(java.lang.String[],boolean) -> a
    java.lang.Object query() -> a
    void commitQuery(java.lang.Object) -> a
    com.nachiket.titan.QueryTask buildSongQuery(java.lang.String[]) -> a
    void clear() -> b
    int getMediaType() -> d
    void setLimiter(com.nachiket.titan.Limiter) -> a
    com.nachiket.titan.Limiter getLimiter() -> c
    com.nachiket.titan.Limiter buildLimiter(long) -> a
    void changeCursor(android.database.Cursor) -> a
    java.lang.Object[] getSections() -> getSections
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getLimiterType() -> e
    int[] getSortEntries() -> f
    void setSortMode(int) -> a
    int getDefaultSortMode() -> g
    int getSortMode() -> h
    android.content.Intent createData(android.view.View) -> a
    void onClick(android.view.View) -> onClick
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
com.nachiket.titan.MediaAdapter$ViewHolder -> ad:
    long id -> a
    java.lang.String title -> b
    android.widget.TextView text -> c
    android.widget.ImageView arrow -> d
com.nachiket.titan.MediaButtonReceiver -> com.nachiket.titan.MediaButtonReceiver:
    int sUseControls -> a
    int sInCall -> b
    long sLastClickTime -> c
    int sBeep -> d
    android.media.AsyncPlayer sBeepPlayer -> e
    android.net.Uri sBeepSound -> f
    void reloadPreference(android.content.Context) -> a
    boolean useHeadsetControls(android.content.Context) -> b
    void setInCall(boolean) -> a
    boolean processKey(android.content.Context,android.view.KeyEvent) -> a
    void registerMediaButton(android.content.Context) -> c
    void unregisterMediaButton(android.content.Context) -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nachiket.titan.MediaUtils -> ae:
    java.util.Random sRandom -> a
    long[] sAllSongs -> b
    int sAllSongsIdx -> c
    com.nachiket.titan.Song[] sRandomCache -> d
    int sRandomCacheIdx -> e
    int sRandomCacheEnd -> f
    int sSongCount -> g
    java.util.Random getRandom() -> b
    com.nachiket.titan.QueryTask buildMediaQuery(int,long,java.lang.String[],java.lang.String) -> a
    com.nachiket.titan.QueryTask buildPlaylistQuery(long,java.lang.String[],java.lang.String) -> a
    com.nachiket.titan.QueryTask buildGenreQuery(long,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    com.nachiket.titan.QueryTask buildQuery(int,long,java.lang.String[],java.lang.String) -> b
    long queryGenreForSong(android.content.ContentResolver,long) -> a
    void shuffle(long[]) -> a
    void shuffle(com.nachiket.titan.Song[],int) -> a
    void shuffle(java.util.List,boolean) -> a
    boolean isSongAvailable(android.content.ContentResolver) -> a
    void onMediaChange() -> a
    com.nachiket.titan.Song randomSong(android.content.ContentResolver) -> b
    boolean deleteFile(java.io.File) -> a
    com.nachiket.titan.QueryTask buildFileQuery(java.lang.String,java.lang.String[]) -> a
com.nachiket.titan.MiniPlaybackActivity -> com.nachiket.titan.MiniPlaybackActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.nachiket.titan.MusicAlphabetIndexer -> af:
    java.lang.String[] ALPHABET -> a
    java.lang.String[] ALPHABET_KEYS -> b
    int[] mAlphaMap -> c
    android.database.Cursor mDataCursor -> d
    java.lang.Object[] getSections() -> a
    void setCursor(android.database.Cursor) -> a
    int getPositionForSection(int) -> a
    int getSectionForPosition(int) -> b
com.nachiket.titan.NewPlaylistDialog -> ag:
    android.widget.Button mPositiveButton -> a
    android.widget.EditText mText -> b
    boolean mAccepted -> c
    java.lang.String mInitialText -> d
    int mActionRes -> e
    android.content.Intent mIntent -> f
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getText() -> a
    android.content.Intent getIntent() -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    boolean isAccepted() -> c
    void onClick(android.view.View) -> onClick
com.nachiket.titan.OneCellWidget -> com.nachiket.titan.OneCellWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.nachiket.titan.Song,int) -> a
com.nachiket.titan.PlaybackActivity -> ah:
    com.nachiket.titan.Action mUpAction -> a
    com.nachiket.titan.Action mDownAction -> b
    android.os.Handler mUiHandler -> d
    android.os.Handler mHandler -> e
    android.os.Looper mLooper -> f
    com.nachiket.titan.CoverView mCoverView -> g
    android.widget.ImageButton mPlayPauseButton -> h
    android.widget.ImageButton mShuffleButton -> i
    android.widget.ImageButton mEndButton -> j
    int mState -> k
    long mLastStateEvent -> c
    long mLastSongEvent -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onResume() -> onResume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void shiftCurrentSong(int) -> a
    void onClick(android.view.View) -> onClick
    void onStateChange(int,int) -> a
    void setState(int) -> b
    void setState(long,int) -> a
    void onSongChange(com.nachiket.titan.Song) -> a
    void setSong(com.nachiket.titan.Song) -> b
    void setSong(long,com.nachiket.titan.Song) -> a
    void replaceSong(int,com.nachiket.titan.Song) -> a
    void onPositionInfoChanged() -> c
    void onMediaChange() -> d
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean handleMessage(android.os.Message) -> handleMessage
    void openLibrary(com.nachiket.titan.Song) -> c
    void upSwipe() -> a
    void downSwipe() -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
com.nachiket.titan.PlaybackActivity$1 -> ai:
    com.nachiket.titan.PlaybackActivity this$0 -> a
    int val$state -> b
    int val$toggled -> c
    void run() -> run
com.nachiket.titan.PlaybackActivity$2 -> aj:
    com.nachiket.titan.PlaybackActivity this$0 -> a
    com.nachiket.titan.Song val$song -> b
    void run() -> run
com.nachiket.titan.PlaybackService -> com.nachiket.titan.PlaybackService:
    int mState -> a
    java.lang.Object[] mStateLock -> b
    java.lang.Object[] sWait -> h
    com.nachiket.titan.PlaybackService sInstance -> c
    java.util.ArrayList sActivities -> i
    android.content.SharedPreferences sSettings -> j
    boolean mHeadsetPause -> d
    boolean mScrobble -> k
    boolean mStockBroadcast -> l
    int mNotificationMode -> m
    boolean mHeadsetOnly -> n
    boolean mHeadsetPlay -> e
    boolean mPlugInitialized -> f
    int mIdleTimeout -> o
    android.app.PendingIntent mNotificationAction -> p
    boolean mInvertNotification -> q
    android.os.Looper mLooper -> r
    android.os.Handler mHandler -> s
    android.media.MediaPlayer mMediaPlayer -> t
    boolean mMediaPlayerInitialized -> u
    android.os.PowerManager$WakeLock mWakeLock -> v
    android.app.NotificationManager mNotificationManager -> w
    android.media.AudioManager mAudioManager -> x
    android.hardware.SensorManager mSensorManager -> y
    com.nachiket.titan.CompatEq mEqualizer -> z
    com.nachiket.titan.SongTimeline mTimeline -> A
    com.nachiket.titan.Song mCurrentSong -> B
    boolean mPlayingBeforeCall -> g
    int mPendingSeek -> C
    long mPendingSeekSong -> D
    com.nachiket.titan.PlaybackService$Receiver mReceiver -> E
    com.nachiket.titan.PlaybackService$InCallListener mCallListener -> F
    java.lang.String mErrorMessage -> G
    float mUserVolume -> H
    float mBaseVolume -> I
    boolean mFadeInProgress -> J
    long mIdleStart -> K
    boolean mDuckedLoss -> L
    double mAccelLast -> M
    double mAccelFiltered -> N
    long mLastShakeTime -> O
    double mShakeThreshold -> P
    com.nachiket.titan.Action mShakeAction -> Q
    boolean mForceNotificationVisible -> R
    android.database.ContentObserver mObserver -> S
    int[] $SWITCH_TABLE$com$nachiket$titan$Action -> T
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.content.SharedPreferences getSettings(android.content.Context) -> a
    void setupSensor() -> p
    void updateVolume() -> q
    void setFlag(int) -> a
    void unsetFlag$13462e() -> a
    boolean isSpeakerOn() -> r
    int updateState(int) -> k
    void broadcastChange(int,com.nachiket.titan.Song,long) -> a
    void updateNotification() -> s
    int play() -> t
    int pause() -> u
    int playPause() -> b
    int setFinishAction(int) -> b
    int cycleFinishAction() -> c
    int setShuffleMode(int) -> c
    int cycleShuffle() -> d
    com.nachiket.titan.Song setCurrentSong(int) -> l
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    com.nachiket.titan.Song getSong(int) -> d
    void onMediaChange() -> e
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    boolean handleMessage(android.os.Message) -> handleMessage
    int getState() -> f
    int getPosition() -> g
    void seekToProgress(int) -> e
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void activeSongReplaced(int,com.nachiket.titan.Song) -> a
    int deleteMedia(int,long) -> a
    com.nachiket.titan.Song shiftCurrentSong(int) -> f
    void userActionTriggered() -> h
    void addSongs(com.nachiket.titan.QueryTask) -> a
    void enqueueFromCurrent(int) -> g
    void clearQueue() -> i
    java.lang.String getErrorMessage() -> j
    void timelineChanged() -> k
    void positionInfoChanged() -> l
    com.nachiket.titan.PlaybackService get(android.content.Context) -> b
    boolean hasInstance() -> m
    void addActivity(com.nachiket.titan.PlaybackActivity) -> a
    void removeActivity(com.nachiket.titan.PlaybackActivity) -> b
    int loadState() -> v
    void saveState(int) -> m
    int shuffleMode(int) -> h
    int finishAction(int) -> i
    android.app.PendingIntent createNotificationAction(android.content.SharedPreferences) -> a
    android.app.Notification createNotification(com.nachiket.titan.Song,int) -> a
    void onAudioFocusChange(int) -> j
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void performAction(com.nachiket.titan.Action,com.nachiket.titan.PlaybackActivity) -> a
    int getTimelinePosition() -> n
    int getTimelineLength() -> o
    int[] $SWITCH_TABLE$com$nachiket$titan$Action() -> w
com.nachiket.titan.PlaybackService$1 -> ak:
    com.nachiket.titan.PlaybackService this$0 -> a
    void onChange(boolean) -> onChange
com.nachiket.titan.PlaybackService$InCallListener -> al:
    com.nachiket.titan.PlaybackService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.nachiket.titan.PlaybackService$Receiver -> am:
    com.nachiket.titan.PlaybackService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nachiket.titan.PlaylistActivity -> com.nachiket.titan.PlaylistActivity:
    int[] MODE_FOR_ACTION -> a
    android.os.Looper mLooper -> b
    com.nachiket.titan.DragListView mListView -> c
    com.nachiket.titan.PlaylistAdapter mAdapter -> d
    long mPlaylistId -> e
    java.lang.String mPlaylistName -> f
    boolean mEditing -> g
    int mDefaultAction -> h
    int mLastAction -> i
    android.widget.Button mEditButton -> j
    android.widget.Button mDeleteButton -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onClick(android.view.View) -> onClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void performAction(int,int,long) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.content.DialogInterface,int) -> onClick
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.nachiket.titan.PlaylistAdapter -> an:
    java.lang.String[] PROJECTION -> a
    android.content.Context mContext -> b
    android.os.Handler mWorkerHandler -> c
    android.os.Handler mUiHandler -> d
    android.view.LayoutInflater mInflater -> e
    android.graphics.drawable.Drawable mExpander -> f
    long mPlaylistId -> g
    boolean mEditable -> h
    void setPlaylistId(long) -> a
    void setEditable(boolean) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    boolean handleMessage(android.os.Message) -> handleMessage
    android.database.Cursor runQuery(android.content.ContentResolver) -> a
    void move(int,int) -> a
    void remove(int) -> a
com.nachiket.titan.PreferencesActivity -> com.nachiket.titan.PreferencesActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.nachiket.titan.PreferencesActivity$AboutActivity -> com.nachiket.titan.PreferencesActivity$AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.nachiket.titan.PreferencesActivity$AudioActivity -> com.nachiket.titan.PreferencesActivity$AudioActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.nachiket.titan.PreferencesActivity$LibraryActivity -> com.nachiket.titan.PreferencesActivity$LibraryActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.nachiket.titan.PreferencesActivity$MiscActivity -> com.nachiket.titan.PreferencesActivity$MiscActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.nachiket.titan.PreferencesActivity$NotificationsActivity -> com.nachiket.titan.PreferencesActivity$NotificationsActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.nachiket.titan.PreferencesActivity$PlaybackActivity -> com.nachiket.titan.PreferencesActivity$PlaybackActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.nachiket.titan.PreferencesActivity$ShakeActivity -> com.nachiket.titan.PreferencesActivity$ShakeActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.nachiket.titan.PreferencesBackupAgent -> com.nachiket.titan.PreferencesBackupAgent:
    void onCreate() -> onCreate
com.nachiket.titan.QueryTask -> ao:
    android.net.Uri uri -> a
    java.lang.String[] projection -> f
    java.lang.String selection -> g
    java.lang.String[] selectionArgs -> h
    java.lang.String sortOrder -> b
    int mode -> c
    int type -> d
    long data -> e
    android.database.Cursor runQuery(android.content.ContentResolver) -> a
com.nachiket.titan.ScanPreference -> com.nachiket.titan.ScanPreference:
    android.content.BroadcastReceiver mReceiver -> a
    void onClick() -> onClick
com.nachiket.titan.ScanPreference$1 -> ap:
    com.nachiket.titan.ScanPreference this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nachiket.titan.SeekBarPreference -> com.nachiket.titan.SeekBarPreference:
    int mValue -> a
    android.widget.TextView mValueText -> b
    java.lang.CharSequence getSummary() -> getSummary
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    java.lang.String getSummary(int) -> a
    android.view.View onCreateDialogView() -> onCreateDialogView
    void onDialogClosed(boolean) -> onDialogClosed
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.nachiket.titan.Song -> aq:
    java.lang.String[] EMPTY_PROJECTION -> a
    java.lang.String[] FILLED_PROJECTION -> b
    java.lang.String[] EMPTY_PLAYLIST_PROJECTION -> c
    java.lang.String[] FILLED_PLAYLIST_PROJECTION -> d
    com.nachiket.titan.Song$CoverCache sCoverCache -> p
    boolean mDisableCoverArt -> e
    long id -> f
    long albumId -> g
    long artistId -> h
    java.lang.String path -> i
    java.lang.String title -> j
    java.lang.String album -> k
    java.lang.String artist -> l
    long duration -> m
    int trackNumber -> q
    int flags -> n
    android.graphics.BitmapFactory$Options BITMAP_OPTIONS -> o
    boolean isRandom() -> a
    void populate(android.database.Cursor) -> a
    long getId(com.nachiket.titan.Song) -> a
    android.graphics.Bitmap getCover(android.content.Context) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.nachiket.titan.Song$CoverCache -> ar:
    android.content.Context mContext -> a
    android.graphics.Bitmap create(java.lang.Long) -> a
    int sizeOf$2838e5a0(java.lang.Object) -> c
    java.lang.Object create(java.lang.Object) -> b
com.nachiket.titan.SongTimeline -> as:
    int[] FINISH_ICONS -> a
    int[] SHUFFLE_ICONS -> b
    android.content.Context mContext -> c
    java.util.ArrayList mSongs -> d
    int mCurrentPos -> e
    int mShuffleMode -> f
    int mFinishAction -> g
    java.util.ArrayList mShuffledSongs -> h
    com.nachiket.titan.Song mSavedPrevious -> i
    com.nachiket.titan.Song mSavedCurrent -> j
    com.nachiket.titan.Song mSavedNext -> k
    int mSavedPos -> l
    int mSavedSize -> m
    com.nachiket.titan.SongTimeline$Callback mCallback -> n
    void readState(java.io.DataInputStream) -> a
    void writeState(java.io.DataOutputStream) -> a
    void setCallback(com.nachiket.titan.SongTimeline$Callback) -> a
    int getShuffleMode() -> a
    int getFinishAction() -> b
    void setShuffleMode(int) -> a
    void setFinishAction(int) -> b
    com.nachiket.titan.Song shuffleAll() -> h
    com.nachiket.titan.Song getSong(int) -> c
    void shiftCurrentSongInternal(int) -> e
    com.nachiket.titan.Song shiftCurrentSong(int) -> d
    int addSongs(android.content.Context,com.nachiket.titan.QueryTask) -> a
    void purge() -> c
    void clearQueue() -> d
    void saveActiveSongs() -> i
    void broadcastChangedSongs() -> j
    void removeSong(long) -> a
    void changed() -> k
    boolean isEndOfQueue() -> e
    int getPosition() -> f
    int getLength() -> g
com.nachiket.titan.SongTimeline$Callback -> at:
    void activeSongReplaced(int,com.nachiket.titan.Song) -> a
    void timelineChanged() -> k
    void positionInfoChanged() -> l
com.nachiket.titan.SongTimeline$FlagComparator -> au:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nachiket.titan.SongTimeline$IdComparator -> av:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nachiket.titan.TabOrderActivity -> com.nachiket.titan.TabOrderActivity:
    com.nachiket.titan.TabOrderAdapter mAdapter -> a
    com.nachiket.titan.DragListView mList -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onClick(android.view.View) -> onClick
    void restoreDefault() -> b
    void save() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nachiket.titan.TabOrderAdapter -> aw:
    com.nachiket.titan.TabOrderActivity mActivity -> a
    android.view.LayoutInflater mInflater -> b
    int[] mTabIds -> c
    void setTabIds(int[]) -> a
    int[] getTabIds() -> a
    void move(int,int) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean hasStableIds() -> hasStableIds
com.nachiket.titan.WidgetD -> com.nachiket.titan.WidgetD:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.nachiket.titan.Song,int) -> a
com.nachiket.titan.WidgetE -> com.nachiket.titan.WidgetE:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.nachiket.titan.Song,int) -> a
com.nachiket.titan.equalizer.HeadsetService -> com.nachiket.titan.equalizer.HeadsetService:
    java.lang.String TAG -> a
    java.util.UUID EFFECT_TYPE_VOLUME -> b
    java.util.UUID EFFECT_TYPE_NULL -> c
    java.util.Map compressionSessions -> d
    android.media.AudioManager mAudioManager -> g
    android.media.audiofx.Equalizer equalizer -> h
    android.media.audiofx.Virtualizer virtualizer -> i
    android.media.audiofx.BassBoost bassBoost -> j
    boolean useHeadphone -> e
    boolean inCall -> f
    android.content.BroadcastReceiver audioSessionReceiver -> k
    android.content.BroadcastReceiver preferenceUpdateReceiver -> l
    android.content.BroadcastReceiver headsetReceiver -> m
    android.telephony.PhoneStateListener mPhoneListener -> n
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void updateDsp() -> a
com.nachiket.titan.equalizer.HeadsetService$1 -> ax:
    com.nachiket.titan.equalizer.HeadsetService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nachiket.titan.equalizer.HeadsetService$2 -> ay:
    com.nachiket.titan.equalizer.HeadsetService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nachiket.titan.equalizer.HeadsetService$3 -> az:
    com.nachiket.titan.equalizer.HeadsetService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nachiket.titan.equalizer.HeadsetService$4 -> ba:
    com.nachiket.titan.equalizer.HeadsetService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.nachiket.titan.equalizer.ServiceLaunchReceiver -> com.nachiket.titan.equalizer.ServiceLaunchReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nachiket.titan.equalizer.activity.Equalizer -> com.nachiket.titan.equalizer.activity.Equalizer:
    void onCreate(android.os.Bundle) -> onCreate
com.nachiket.titan.equalizer.activity.EqualizerScreen -> com.nachiket.titan.equalizer.activity.EqualizerScreen:
    android.content.SharedPreferences$OnSharedPreferenceChangeListener serviceLauncher -> a
    java.lang.String getSubPage() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
com.nachiket.titan.equalizer.activity.EqualizerScreen$1 -> bb:
    com.nachiket.titan.equalizer.activity.EqualizerScreen this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.nachiket.titan.equalizer.preference.Biquad -> bc:
    com.nachiket.titan.equalizer.preference.Complex b0 -> a
    com.nachiket.titan.equalizer.preference.Complex b1 -> b
    com.nachiket.titan.equalizer.preference.Complex b2 -> c
    com.nachiket.titan.equalizer.preference.Complex a0 -> d
    com.nachiket.titan.equalizer.preference.Complex a1 -> e
    com.nachiket.titan.equalizer.preference.Complex a2 -> f
    void setHighShelf$4098370b(float,float,float) -> a
    com.nachiket.titan.equalizer.preference.Complex evaluateTransfer(com.nachiket.titan.equalizer.preference.Complex) -> a
com.nachiket.titan.equalizer.preference.Complex -> bd:
    float re -> a
    float im -> b
    float rho() -> a
    com.nachiket.titan.equalizer.preference.Complex add(com.nachiket.titan.equalizer.preference.Complex) -> a
    com.nachiket.titan.equalizer.preference.Complex mul(com.nachiket.titan.equalizer.preference.Complex) -> b
    com.nachiket.titan.equalizer.preference.Complex mul(float) -> a
    com.nachiket.titan.equalizer.preference.Complex div(com.nachiket.titan.equalizer.preference.Complex) -> c
com.nachiket.titan.equalizer.preference.EqualizerPreference -> com.nachiket.titan.equalizer.preference.EqualizerPreference:
    com.nachiket.titan.equalizer.preference.EqualizerSurface listEqualizer -> b
    com.nachiket.titan.equalizer.preference.EqualizerSurface dialogEqualizer -> a
    float[] levels -> c
    float[] initialLevels -> d
    int showedDialogCount -> e
    void onBindDialogView(android.view.View) -> onBindDialogView
    void onDialogClosed(boolean) -> onDialogClosed
    void refreshPreference(float[]) -> a
    void onBindView(android.view.View) -> onBindView
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void showDialog(android.os.Bundle) -> showDialog
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void refreshFromPreference() -> a
    float[] access$0(com.nachiket.titan.equalizer.preference.EqualizerPreference) -> a
com.nachiket.titan.equalizer.preference.EqualizerPreference$1 -> be:
    com.nachiket.titan.equalizer.preference.EqualizerPreference this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.nachiket.titan.equalizer.preference.EqualizerPreference$SavedLevels -> bf:
    float[] initialLevels -> a
    float[] levels -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void access$2(com.nachiket.titan.equalizer.preference.EqualizerPreference$SavedLevels,float[]) -> a
    void access$3(com.nachiket.titan.equalizer.preference.EqualizerPreference$SavedLevels,float[]) -> b
    float[] access$4(com.nachiket.titan.equalizer.preference.EqualizerPreference$SavedLevels) -> a
    float[] access$5(com.nachiket.titan.equalizer.preference.EqualizerPreference$SavedLevels) -> b
com.nachiket.titan.equalizer.preference.EqualizerPreference$SavedLevels$1 -> bg:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.nachiket.titan.equalizer.preference.EqualizerSurface -> com.nachiket.titan.equalizer.preference.EqualizerSurface:
    int MIN_FREQ -> c
    int MAX_FREQ -> d
    int SAMPLING_RATE -> e
    int MIN_DB -> a
    int MAX_DB -> b
    int width -> f
    int height -> g
    int barwidth -> h
    float[] levels -> i
    android.graphics.Paint white -> j
    android.graphics.Paint whiteCentered -> k
    android.graphics.Paint gray -> l
    android.graphics.Paint green -> m
    android.graphics.Paint blue -> n
    android.graphics.Paint purple -> o
    android.graphics.Paint red -> p
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setBand(int,float) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    float projectX(float) -> b
    float projectY(float) -> c
    int findClosest(float) -> a
com.nachiket.titan.equalizer.preference.SummariedListPreference -> com.nachiket.titan.equalizer.preference.SummariedListPreference:
    void setValue(java.lang.String) -> setValue
    void refreshFromPreference() -> a
com.viewpagerindicator.TabPageIndicator -> com.viewpagerindicator.TabPageIndicator:
    java.lang.Runnable mTabSelector -> a
    android.widget.LinearLayout mTabLayout -> b
    android.support.v4.view.ViewPager mViewPager -> c
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> d
    int mSelectedTabIndex -> e
    void onMeasure(int,int) -> onMeasure
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPageScrollStateChanged(int) -> d
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> b
    void setViewPager(android.support.v4.view.ViewPager) -> a
    void notifyDataSetChanged() -> a
    void setCurrentItem(int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    void onClick(android.view.View) -> onClick
com.viewpagerindicator.TabPageIndicator$1 -> bh:
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
