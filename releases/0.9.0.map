org.kreed.vanilla.Cache -> org.kreed.vanilla.a:
    long[] mKeys -> a
    java.lang.Object[] mValues -> b
    int count() -> a
    int indexOf(long) -> a
    java.lang.Object get(long) -> b
    java.lang.Object discardOldest() -> b
    java.lang.Object put(long,java.lang.Object) -> a
    long getPlaylist(android.content.ContentResolver,java.lang.String) -> a
    void deletePlaylist(android.content.ContentResolver,long) -> a
org.kreed.vanilla.CoverBitmap -> org.kreed.vanilla.b:
    int TEXT_SIZE -> a
    int TEXT_SIZE_BIG -> b
    int PADDING -> c
    int TEXT_SPACE -> d
    android.graphics.Bitmap SONG_ICON -> e
    android.graphics.Bitmap ALBUM_ICON -> f
    android.graphics.Bitmap ARTIST_ICON -> g
    void loadTextSizes(android.content.Context) -> a
    void drawText(android.graphics.Canvas,java.lang.String,int,int,int,int,android.graphics.Paint) -> a
    android.graphics.Bitmap createBitmap(android.content.Context,int,org.kreed.vanilla.Song,int,int,android.graphics.Bitmap) -> a
org.kreed.vanilla.CoverView -> org.kreed.vanilla.CoverView:
    int sSnapVelocity -> a
    android.os.Handler mHandler -> b
    int mCoverStyle -> c
    org.kreed.vanilla.CoverView$Callback mCallback -> d
    org.kreed.vanilla.Song[] mSongs -> e
    android.graphics.Bitmap[] mBitmaps -> f
    org.kreed.vanilla.Cache mBitmapCache -> g
    android.widget.Scroller mScroller -> h
    android.view.VelocityTracker mVelocityTracker -> i
    float mLastMotionX -> j
    float mLastMotionY -> k
    float mStartX -> l
    float mStartY -> m
    int mTentativeCover -> n
    boolean mIgnoreNextUp -> o
    void setup(android.os.Looper,org.kreed.vanilla.CoverView$Callback,int) -> a
    void resetScroll() -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setSong(int,org.kreed.vanilla.Song) -> a
    void querySongs(org.kreed.vanilla.PlaybackService) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
org.kreed.vanilla.CoverView$Callback -> org.kreed.vanilla.c:
    void nextSong() -> a
    void previousSong() -> b
    void upSwipe() -> c
    void downSwipe() -> d
org.kreed.vanilla.FourLongWidget -> org.kreed.vanilla.FourLongWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,org.kreed.vanilla.Song,int) -> a
org.kreed.vanilla.FourSquareWidget -> org.kreed.vanilla.FourSquareWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,org.kreed.vanilla.Song,int) -> a
org.kreed.vanilla.FullPlaybackActivity -> org.kreed.vanilla.FullPlaybackActivity:
    android.os.Handler mUiHandler -> f
    android.widget.RelativeLayout mMessageOverlay -> g
    android.widget.TextView mOverlayText -> h
    android.view.View mControlsTop -> i
    android.view.View mControlsBottom -> j
    android.widget.SeekBar mSeekBar -> k
    android.widget.TextView mSeekText -> l
    android.widget.TextView mTitle -> m
    android.widget.TextView mAlbum -> n
    android.widget.TextView mArtist -> o
    long mDuration -> p
    java.lang.String mDurationString -> q
    boolean mSeekBarTracking -> r
    boolean mPaused -> s
    java.lang.StringBuilder mTimeBuilder -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void showOverlayMessage(int) -> b
    void onStateChange(int,int) -> a
    void onSongChange(org.kreed.vanilla.Song) -> a
    void setDuration(long) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onSearchRequested() -> onSearchRequested
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void updateProgress() -> g
    void toggleControls() -> h
    boolean handleMessage(android.os.Message) -> handleMessage
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void performAction(int) -> a
org.kreed.vanilla.FullPlaybackActivity$1 -> org.kreed.vanilla.d:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
org.kreed.vanilla.IdlePreference -> org.kreed.vanilla.IdlePreference:
    int MIN -> a
    int MAX -> b
    int mValue -> c
    android.widget.TextView mValueText -> d
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    void updateText() -> a
    void onDialogClosed(boolean) -> onDialogClosed
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.kreed.vanilla.LaunchActivity -> org.kreed.vanilla.LaunchActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.kreed.vanilla.LibraryActivity -> org.kreed.vanilla.LibraryActivity:
    int[] modeForAction -> f
    android.widget.TabWidget mTabWidget -> g
    android.view.ViewGroup mLists -> h
    int mCurrentTab -> i
    android.view.View mSearchBox -> j
    boolean mSearchBoxVisible -> k
    android.widget.TextView mTextFilter -> l
    android.view.View mClearButton -> m
    android.view.View mControls -> n
    android.widget.TextView mStatusText -> o
    android.widget.ImageView mCover -> p
    android.view.ViewGroup mLimiterViews -> q
    int mDefaultAction -> r
    int mLastAction -> s
    long mLastActedId -> t
    org.kreed.vanilla.MediaAdapter[] mAdapters -> u
    org.kreed.vanilla.MediaAdapter mArtistAdapter -> v
    org.kreed.vanilla.MediaAdapter mAlbumAdapter -> w
    org.kreed.vanilla.MediaAdapter mSongAdapter -> x
    org.kreed.vanilla.MediaAdapter mPlaylistAdapter -> y
    org.kreed.vanilla.MediaAdapter mGenreAdapter -> z
    org.kreed.vanilla.MediaAdapter mCurrentAdapter -> A
    android.database.ContentObserver mPlaylistObserver -> B
    boolean $assertionsDisabled -> C
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void updateHeaders() -> g
    void pickSongs(android.content.Intent,int) -> a
    void expand(android.content.Intent) -> a
    int setLimiter(org.kreed.vanilla.MediaAdapter$Limiter) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void updateLimiterViews() -> h
    void onClick(android.view.View) -> onClick
    android.content.Intent createClickIntent(org.kreed.vanilla.MediaAdapter,org.kreed.vanilla.MediaView) -> a
    org.kreed.vanilla.QueryTask buildQueryFromIntent(android.content.Intent,boolean) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void addToPlaylist(long,android.content.Intent) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    org.kreed.vanilla.MediaAdapter setupView(int,int,boolean,boolean,org.kreed.vanilla.MediaAdapter$Limiter) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void runQuery(org.kreed.vanilla.MediaAdapter) -> a
    void onMediaChange() -> e
    void setSearchBoxVisible(boolean) -> a
    void onSongChange(org.kreed.vanilla.Song) -> a
    void setCurrentTab(int) -> b
    org.kreed.vanilla.MediaAdapter access$000(org.kreed.vanilla.LibraryActivity) -> a
org.kreed.vanilla.LibraryActivity$1 -> org.kreed.vanilla.e:
    org.kreed.vanilla.LibraryActivity this$0 -> a
    void onChange(boolean) -> onChange
org.kreed.vanilla.LibraryActivity$2 -> org.kreed.vanilla.f:
    org.kreed.vanilla.MediaAdapter val$adapter -> a
    android.database.Cursor val$cursor -> b
    void run() -> run
org.kreed.vanilla.MediaAdapter -> org.kreed.vanilla.g:
    org.kreed.vanilla.LibraryActivity mActivity -> a
    int mType -> b
    android.net.Uri mStore -> c
    java.lang.String[] mFields -> d
    java.lang.String[] mFieldKeys -> e
    boolean mExpandable -> f
    org.kreed.vanilla.MediaAdapter$Limiter mLimiter -> g
    java.lang.String mConstraint -> h
    org.kreed.vanilla.MusicAlphabetIndexer mIndexer -> i
    boolean mHasHeader -> j
    java.lang.String mHeaderText -> k
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setHeaderText(java.lang.String) -> a
    void filter(java.lang.String) -> b
    org.kreed.vanilla.QueryTask buildQuery(boolean) -> a
    int getMediaType() -> a
    void setLimiter(org.kreed.vanilla.MediaAdapter$Limiter) -> a
    org.kreed.vanilla.MediaAdapter$Limiter getLimiter() -> b
    org.kreed.vanilla.MediaAdapter$Limiter getLimiter(long) -> a
    void changeCursor(android.database.Cursor) -> changeCursor
    java.lang.Object[] getSections() -> getSections
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
org.kreed.vanilla.MediaAdapter$Limiter -> org.kreed.vanilla.h:
    java.lang.String[] names -> a
    long id -> b
    int type -> c
    java.lang.String selection -> d
org.kreed.vanilla.MediaButtonHandler -> org.kreed.vanilla.i:
    org.kreed.vanilla.MediaButtonHandler mInstance -> a
    int mUseControls -> b
    android.content.Context mContext -> c
    int mInCall -> d
    long mLastClickTime -> e
    android.media.AudioManager mAudioManager -> f
    java.lang.reflect.Method mRegisterMediaButtonEventReceiver -> g
    java.lang.reflect.Method mUnregisterMediaButtonEventReceiver -> h
    android.content.ComponentName mButtonReceiver -> i
    boolean $assertionsDisabled -> j
    org.kreed.vanilla.MediaButtonHandler getInstance(android.content.Context) -> a
    void reloadPreference(android.content.Context) -> b
    boolean useHeadsetControls(android.content.Context) -> c
    void setInCall(boolean) -> a
    void act(java.lang.String) -> a
    boolean processKey(android.view.KeyEvent) -> a
    boolean process(android.content.Intent) -> a
    void registerMediaButton() -> a
    void unregisterMediaButton() -> b
org.kreed.vanilla.MediaButtonReceiver -> org.kreed.vanilla.MediaButtonReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.kreed.vanilla.MediaUtils -> org.kreed.vanilla.j:
    java.util.Random sRandom -> a
    long[] sAllSongs -> b
    int sAllSongsIdx -> c
    org.kreed.vanilla.Song[] sRandomCache -> d
    int sRandomCacheIdx -> e
    int sRandomCacheEnd -> f
    int sSongCount -> g
    boolean $assertionsDisabled -> h
    java.util.Random getRandom() -> b
    org.kreed.vanilla.QueryTask buildGenreQuery(long,java.lang.String[],java.lang.String,java.lang.String[]) -> a
    org.kreed.vanilla.QueryTask buildQuery(int,long,java.lang.String[],java.lang.String) -> a
    long queryGenreForSong(android.content.ContentResolver,long) -> a
    void shuffle(long[]) -> a
    void shuffle(org.kreed.vanilla.Song[],int) -> a
    void shuffle(java.util.List,boolean) -> a
    boolean isSongAvailable(android.content.ContentResolver) -> a
    void onMediaChange() -> a
    org.kreed.vanilla.Song randomSong(android.content.ContentResolver) -> b
org.kreed.vanilla.MediaView -> org.kreed.vanilla.k:
    android.graphics.Bitmap sExpander -> a
    android.graphics.Paint sPaint -> b
    android.graphics.DashPathEffect sDashEffect -> c
    android.graphics.RadialGradient sDividerGradient -> d
    int sTextSize -> e
    long mId -> f
    java.lang.String mTitle -> g
    java.lang.String mSubTitle -> h
    boolean mExpanderPressed -> i
    boolean mExpandable -> j
    int mViewHeight -> k
    boolean mIsHeader -> l
    void init(android.content.Context) -> a
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    long getMediaId() -> a
    java.lang.String getTitle() -> b
    boolean isExpanderPressed() -> c
    boolean hasExpanders() -> d
    void makeHeader(java.lang.String) -> a
    void updateMedia(android.database.Cursor,boolean) -> a
    boolean isHeader() -> e
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
org.kreed.vanilla.MiniPlaybackActivity -> org.kreed.vanilla.MiniPlaybackActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
org.kreed.vanilla.MiniPlaybackActivityLayout -> org.kreed.vanilla.MiniPlaybackActivityLayout:
    int mCoverSize -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
org.kreed.vanilla.MusicAlphabetIndexer -> org.kreed.vanilla.l:
    int compare(java.lang.String,java.lang.String) -> compare
org.kreed.vanilla.NewPlaylistDialog -> org.kreed.vanilla.m:
    android.widget.Button mPositiveButton -> a
    android.widget.EditText mText -> b
    boolean mAccepted -> c
    java.lang.String mInitialText -> d
    int mActionRes -> e
    android.content.Intent mIntent -> f
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getText() -> a
    android.content.Intent getIntent() -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    boolean isAccepted() -> c
    void onClick(android.view.View) -> onClick
org.kreed.vanilla.OneCellWidget -> org.kreed.vanilla.OneCellWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,org.kreed.vanilla.Song,int) -> a
org.kreed.vanilla.PlaybackActivity -> org.kreed.vanilla.PlaybackActivity:
    int mUpAction -> f
    int mDownAction -> g
    int mCoverPressAction -> h
    int mCoverLongPressAction -> i
    android.os.Handler mHandler -> a
    android.os.Looper mLooper -> b
    org.kreed.vanilla.CoverView mCoverView -> c
    android.widget.ImageButton mPlayPauseButton -> d
    int mState -> e
    long mLastStateEvent -> j
    long mLastSongEvent -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onResume() -> onResume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void nextSong() -> a
    void previousSong() -> b
    void playPause() -> g
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onStateChange(int,int) -> a
    void setState(int) -> b
    void setState(long,int) -> a
    void onSongChange(org.kreed.vanilla.Song) -> a
    void setSong(org.kreed.vanilla.Song) -> b
    void setSong(long,org.kreed.vanilla.Song) -> a
    void replaceSong(int,org.kreed.vanilla.Song) -> a
    void onMediaChange() -> e
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean handleMessage(android.os.Message) -> handleMessage
    void cycleShuffle() -> h
    void cycleRepeat() -> i
    void toggleRandom() -> j
    void openLibrary() -> f
    void enqueue(int) -> c
    void performAction(int) -> a
    void upSwipe() -> c
    void downSwipe() -> d
org.kreed.vanilla.PlaybackActivity$1 -> org.kreed.vanilla.n:
    int val$state -> a
    int val$toggled -> b
    org.kreed.vanilla.PlaybackActivity this$0 -> c
    void run() -> run
org.kreed.vanilla.PlaybackActivity$2 -> org.kreed.vanilla.o:
    org.kreed.vanilla.Song val$song -> a
    org.kreed.vanilla.PlaybackActivity this$0 -> b
    void run() -> run
org.kreed.vanilla.PlaybackService -> org.kreed.vanilla.PlaybackService:
    java.lang.Object sWait -> e
    org.kreed.vanilla.PlaybackService sInstance -> f
    java.util.ArrayList sActivities -> g
    android.content.SharedPreferences sSettings -> h
    boolean mHeadsetPause -> a
    boolean mScrobble -> i
    boolean mStockBroadcast -> j
    int mNotificationMode -> k
    boolean mHeadsetOnly -> l
    boolean mHeadsetPlay -> m
    boolean mPlugInitialized -> n
    int mIdleTimeout -> o
    android.os.Looper mLooper -> p
    android.os.Handler mHandler -> q
    android.media.MediaPlayer mMediaPlayer -> r
    boolean mMediaPlayerInitialized -> s
    android.os.PowerManager$WakeLock mWakeLock -> t
    android.app.NotificationManager mNotificationManager -> u
    android.media.AudioManager mAudioManager -> v
    org.kreed.vanilla.SongTimeline mTimeline -> w
    int mState -> b
    org.kreed.vanilla.Song mCurrentSong -> x
    java.lang.Object mStateLock -> c
    boolean mPlayingBeforeCall -> d
    int mPendingSeek -> y
    org.kreed.vanilla.PlaybackService$Receiver mReceiver -> z
    org.kreed.vanilla.PlaybackService$InCallListener mCallListener -> A
    java.lang.String mErrorMessage -> B
    float mUserVolume -> C
    float mCurrentVolume -> D
    android.database.ContentObserver mObserver -> E
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    android.content.SharedPreferences getSettings(android.content.Context) -> a
    int setFlag(int) -> a
    int unsetFlag$134621() -> a
    boolean isSpeakerOn() -> p
    int updateState(int) -> f
    void broadcastChange(int,org.kreed.vanilla.Song,long) -> a
    void updateNotification() -> q
    int playPause() -> b
    int toggleRandom() -> c
    int cycleRepeat() -> d
    int cycleShuffle() -> e
    org.kreed.vanilla.Song setCurrentSong(int) -> g
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    org.kreed.vanilla.Song getSong(int) -> b
    void go(int,boolean) -> a
    void onMediaChange() -> f
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    boolean handleMessage(android.os.Message) -> handleMessage
    int getState() -> g
    int getPosition() -> h
    void seekToProgress(int) -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void activeSongReplaced(int,org.kreed.vanilla.Song) -> a
    int deleteMedia(int,long) -> a
    org.kreed.vanilla.Song nextSong() -> i
    org.kreed.vanilla.Song previousSong() -> j
    void userActionTriggered() -> k
    void addSongs(int,org.kreed.vanilla.QueryTask) -> a
    void enqueueFromCurrent(int) -> d
    void clearQueue() -> l
    java.lang.String getErrorMessage() -> m
    void timelineChanged() -> n
    org.kreed.vanilla.PlaybackService get(android.content.Context) -> b
    boolean hasInstance() -> o
    void addActivity(org.kreed.vanilla.PlaybackActivity) -> a
    void removeActivity(org.kreed.vanilla.PlaybackActivity) -> b
    int loadState() -> r
    void saveState(int) -> h
    int shuffleMode(int) -> e
    boolean access$000(org.kreed.vanilla.PlaybackService) -> a
    boolean access$100(org.kreed.vanilla.PlaybackService) -> b
    boolean access$102$509109ab(org.kreed.vanilla.PlaybackService) -> c
org.kreed.vanilla.PlaybackService$1 -> org.kreed.vanilla.p:
    org.kreed.vanilla.PlaybackService this$0 -> a
    void onChange(boolean) -> onChange
org.kreed.vanilla.PlaybackService$InCallListener -> org.kreed.vanilla.q:
    org.kreed.vanilla.PlaybackService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
org.kreed.vanilla.PlaybackService$Receiver -> org.kreed.vanilla.r:
    org.kreed.vanilla.PlaybackService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.kreed.vanilla.PreferencesActivity -> org.kreed.vanilla.PreferencesActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.kreed.vanilla.QueryTask -> org.kreed.vanilla.s:
    android.net.Uri mUri -> a
    java.lang.String[] mProjection -> b
    java.lang.String mSelection -> c
    java.lang.String[] mSelectionArgs -> d
    java.lang.String mSortOrder -> e
    android.database.Cursor runQuery(android.content.ContentResolver) -> a
org.kreed.vanilla.Song -> org.kreed.vanilla.t:
    java.lang.String[] EMPTY_PROJECTION -> a
    java.lang.String[] FILLED_PROJECTION -> b
    java.lang.String[] EMPTY_PLAYLIST_PROJECTION -> c
    java.lang.String[] FILLED_PLAYLIST_PROJECTION -> d
    org.kreed.vanilla.Cache mCoverCache -> o
    boolean mDisableCoverArt -> e
    long id -> f
    long albumId -> g
    long artistId -> h
    java.lang.String path -> i
    java.lang.String title -> j
    java.lang.String album -> k
    java.lang.String artist -> l
    long duration -> m
    int trackNumber -> p
    int flags -> n
    android.graphics.BitmapFactory$Options BITMAP_OPTIONS -> q
    boolean isRandom() -> a
    void populate(android.database.Cursor) -> a
    long getId(org.kreed.vanilla.Song) -> a
    android.graphics.Bitmap getCover(android.content.Context) -> a
    android.net.Uri getCoverUri() -> b
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.kreed.vanilla.SongNotification -> org.kreed.vanilla.SongNotification:
org.kreed.vanilla.SongTimeline -> org.kreed.vanilla.u:
    android.content.Context mContext -> a
    java.util.ArrayList mSongs -> b
    int mCurrentPos -> c
    int mShuffleMode -> d
    int mFinishAction -> e
    java.util.ArrayList mShuffledSongs -> f
    org.kreed.vanilla.Song mSavedPrevious -> g
    org.kreed.vanilla.Song mSavedCurrent -> h
    org.kreed.vanilla.Song mSavedNext -> i
    org.kreed.vanilla.SongTimeline$Callback mCallback -> j
    boolean $assertionsDisabled -> k
    void readState(java.io.DataInputStream) -> a
    void writeState(java.io.DataOutputStream) -> a
    void setCallback(org.kreed.vanilla.SongTimeline$Callback) -> a
    int getShuffleMode() -> a
    int getFinishAction() -> b
    void setShuffleMode(int) -> a
    void setFinishAction(int) -> b
    org.kreed.vanilla.Song shuffleAll() -> f
    org.kreed.vanilla.Song getSong(int) -> c
    org.kreed.vanilla.Song shiftCurrentSong(int) -> d
    int addSongs(int,android.database.Cursor) -> a
    void purge() -> c
    void clearQueue() -> d
    void saveActiveSongs() -> g
    void broadcastChangedSongs() -> h
    void removeSong(long) -> a
    void changed() -> i
    boolean isEndOfQueue() -> e
org.kreed.vanilla.SongTimeline$Callback -> org.kreed.vanilla.v:
    void activeSongReplaced(int,org.kreed.vanilla.Song) -> a
    void timelineChanged() -> n
org.kreed.vanilla.SongTimeline$FlagComparator -> org.kreed.vanilla.w:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.kreed.vanilla.SongTimeline$IdComparator -> org.kreed.vanilla.x:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.kreed.vanilla.VolumePreference -> org.kreed.vanilla.VolumePreference:
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
