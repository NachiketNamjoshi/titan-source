org.kreed.vanilla.Cache -> a:
    long[] mKeys -> a
    java.lang.Object[] mValues -> b
    int count() -> a
    int indexOf(long) -> a
    long getPlaylist(android.content.ContentResolver,java.lang.String) -> a
    void deletePlaylist(android.content.ContentResolver,long) -> a
org.kreed.vanilla.CompatFroyo -> org.kreed.vanilla.CompatFroyo:
    void registerMediaButtonEventReceiver(android.media.AudioManager,android.content.ComponentName) -> a
    void unregisterMediaButtonEventReceiver(android.media.AudioManager,android.content.ComponentName) -> b
    void dataChanged(android.content.Context) -> a
org.kreed.vanilla.CoverBitmap -> b:
    int TEXT_SIZE -> a
    int TEXT_SIZE_BIG -> b
    int PADDING -> c
    int TEXT_SPACE -> d
    android.graphics.Bitmap SONG_ICON -> e
    android.graphics.Bitmap ALBUM_ICON -> f
    android.graphics.Bitmap ARTIST_ICON -> g
    void loadTextSizes(android.content.Context) -> a
    void drawText(android.graphics.Canvas,java.lang.String,int,int,int,int,android.graphics.Paint) -> a
    android.graphics.Bitmap createBitmap(android.content.Context,int,android.graphics.Bitmap,org.kreed.vanilla.Song,int,int,android.graphics.Bitmap) -> a
    android.graphics.Bitmap generateDefaultCover(int,int) -> a
org.kreed.vanilla.CoverView -> org.kreed.vanilla.CoverView:
    int sSnapVelocity -> a
    android.os.Handler mHandler -> b
    int mCoverStyle -> c
    org.kreed.vanilla.CoverView$Callback mCallback -> d
    org.kreed.vanilla.Song[] mSongs -> e
    android.graphics.Bitmap[] mBitmaps -> f
    org.kreed.vanilla.Cache mBitmapCache -> g
    android.graphics.Bitmap mDefaultCover -> h
    android.widget.Scroller mScroller -> i
    android.view.VelocityTracker mVelocityTracker -> j
    float mLastMotionX -> k
    float mLastMotionY -> l
    float mStartX -> m
    float mStartY -> n
    int mTentativeCover -> o
    boolean mIgnoreNextUp -> p
    boolean mPendingQuery -> q
    void setup(android.os.Looper,org.kreed.vanilla.CoverView$Callback,int) -> a
    void resetScroll() -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setSong(int,org.kreed.vanilla.Song) -> a
    void querySongs(org.kreed.vanilla.PlaybackService) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onMeasure(int,int) -> onMeasure
org.kreed.vanilla.CoverView$Callback -> c:
    void nextSong() -> a
    void previousSong() -> b
    void upSwipe() -> c
    void downSwipe() -> d
org.kreed.vanilla.DragListView -> org.kreed.vanilla.DragListView:
    android.os.Handler mHandler -> a
    org.kreed.vanilla.PlaylistAdapter mAdapter -> b
    boolean mEditable -> c
    android.widget.ImageView mDragView -> d
    android.graphics.Bitmap mDragBitmap -> e
    android.view.WindowManager mWindowManager -> f
    android.view.WindowManager$LayoutParams mWindowParams -> g
    int mDragPos -> h
    int mSrcDragPos -> i
    int mDragPointY -> j
    int mYOffset -> k
    int mDragHeight -> l
    int mLastMotionY -> m
    void setAdapter(org.kreed.vanilla.PlaylistAdapter) -> a
    void setEditable(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int computeDragPosition(int) -> a
    void stopDragging() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
org.kreed.vanilla.FourLongWidget -> org.kreed.vanilla.FourLongWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,org.kreed.vanilla.Song,int) -> a
org.kreed.vanilla.FourSquareWidget -> org.kreed.vanilla.FourSquareWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,org.kreed.vanilla.Song,int) -> a
org.kreed.vanilla.FullPlaybackActivity -> org.kreed.vanilla.FullPlaybackActivity:
    android.widget.TextView mOverlayText -> i
    android.view.View mControlsBottom -> j
    android.widget.SeekBar mSeekBar -> k
    android.widget.TextView mElapsedView -> l
    android.widget.TextView mDurationView -> m
    android.widget.TextView mTitle -> n
    android.widget.TextView mAlbum -> o
    android.widget.TextView mArtist -> p
    boolean mControlsVisible -> q
    long mDuration -> r
    boolean mSeekBarTracking -> s
    boolean mPaused -> t
    int mDisplayMode -> u
    org.kreed.vanilla.PlaybackActivity$Action mCoverPressAction -> v
    org.kreed.vanilla.PlaybackActivity$Action mCoverLongPressAction -> w
    java.lang.StringBuilder mTimeBuilder -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void showOverlayMessage(int) -> b
    void onStateChange(int,int) -> a
    void onSongChange(org.kreed.vanilla.Song) -> a
    void setDuration(long) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onSearchRequested() -> onSearchRequested
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void updateProgress() -> g
    void setControlsVisible(boolean) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void performAction(org.kreed.vanilla.PlaybackActivity$Action) -> a
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
org.kreed.vanilla.IdlePreference -> org.kreed.vanilla.IdlePreference:
    int mValue -> a
    android.widget.TextView mValueText -> b
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    void updateText() -> a
    void onDialogClosed(boolean) -> onDialogClosed
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.kreed.vanilla.LaunchActivity -> org.kreed.vanilla.LaunchActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.kreed.vanilla.LibraryActivity -> org.kreed.vanilla.LibraryActivity:
    int[] modeForAction -> i
    android.widget.TabHost mTabHost -> j
    android.view.View mSearchBox -> k
    boolean mSearchBoxVisible -> l
    android.widget.TextView mTextFilter -> m
    android.view.View mClearButton -> n
    android.view.View mControls -> o
    android.widget.TextView mTitle -> p
    android.widget.TextView mArtist -> q
    android.widget.ImageView mCover -> r
    android.view.View mEmptyQueue -> s
    android.view.ViewGroup mLimiterViews -> t
    int mDefaultAction -> u
    int mLastAction -> v
    long mLastActedId -> w
    org.kreed.vanilla.MediaAdapter[] mAdapters -> x
    org.kreed.vanilla.MediaAdapter mArtistAdapter -> y
    org.kreed.vanilla.MediaAdapter mAlbumAdapter -> z
    org.kreed.vanilla.MediaAdapter mSongAdapter -> A
    org.kreed.vanilla.MediaAdapter mPlaylistAdapter -> B
    org.kreed.vanilla.MediaAdapter mGenreAdapter -> C
    org.kreed.vanilla.MediaAdapter mCurrentAdapter -> D
    android.database.ContentObserver mPlaylistObserver -> E
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void updateHeaders() -> g
    void pickSongs(android.content.Intent,int) -> a
    void expand(android.content.Intent) -> a
    int setLimiter(org.kreed.vanilla.MediaAdapter$Limiter) -> a
    void openPlaybackActivity() -> h
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void updateLimiterViews() -> i
    void onClick(android.view.View) -> onClick
    android.content.Intent createClickIntent(org.kreed.vanilla.MediaAdapter,org.kreed.vanilla.MediaView) -> a
    org.kreed.vanilla.QueryTask buildQueryFromIntent(android.content.Intent,boolean,boolean) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void addToPlaylist(long,android.content.Intent) -> a
    void editPlaylist(long,java.lang.String) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    org.kreed.vanilla.MediaAdapter setupView(int,int,int,int,boolean,boolean,org.kreed.vanilla.MediaAdapter$Limiter) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void requestRequery(org.kreed.vanilla.MediaAdapter) -> a
    void runQuery(org.kreed.vanilla.MediaAdapter) -> b
    void onMediaChange() -> e
    void setSearchBoxVisible(boolean) -> a
    void onStateChange(int,int) -> a
    void onSongChange(org.kreed.vanilla.Song) -> a
    void onTabChanged(java.lang.String) -> onTabChanged
    void loadSortOrder(org.kreed.vanilla.MediaAdapter) -> c
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDismiss(android.content.DialogInterface) -> onDismiss
    org.kreed.vanilla.MediaAdapter access$000(org.kreed.vanilla.LibraryActivity) -> a
org.kreed.vanilla.LibraryActivity$1 -> d:
    org.kreed.vanilla.LibraryActivity this$0 -> a
    void onChange(boolean) -> onChange
org.kreed.vanilla.LibraryActivity$2 -> e:
    org.kreed.vanilla.MediaAdapter val$adapter -> a
    android.database.Cursor val$cursor -> b
    void run() -> run
org.kreed.vanilla.MediaAdapter -> f:
    java.util.regex.Pattern SPACE_SPLIT -> a
    android.content.Context mContext -> b
    int mType -> c
    android.net.Uri mStore -> d
    java.lang.String[] mFields -> e
    java.lang.String[] mFieldKeys -> f
    java.lang.String[] mProjection -> g
    boolean mExpandable -> h
    org.kreed.vanilla.MediaAdapter$Limiter mLimiter -> i
    java.lang.String mConstraint -> j
    org.kreed.vanilla.MusicAlphabetIndexer mIndexer -> k
    boolean mHasHeader -> l
    java.lang.String mHeaderText -> m
    java.lang.String mSongSort -> n
    boolean mNeedsRequery -> o
    int[] mSortEntries -> p
    java.lang.String[] mSortValues -> q
    int mSortMode -> r
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setHeaderText(java.lang.String) -> a
    boolean isRequeryNeeded() -> a
    void requestRequery() -> b
    void setFilter(java.lang.String) -> b
    org.kreed.vanilla.QueryTask buildQuery(java.lang.String[],boolean) -> a
    org.kreed.vanilla.QueryTask buildQuery() -> c
    org.kreed.vanilla.QueryTask buildSongQuery(java.lang.String[]) -> a
    int getMediaType() -> d
    void setLimiter(org.kreed.vanilla.MediaAdapter$Limiter) -> a
    org.kreed.vanilla.MediaAdapter$Limiter getLimiter() -> e
    org.kreed.vanilla.MediaAdapter$Limiter getLimiter(long) -> a
    void changeCursor(android.database.Cursor) -> changeCursor
    java.lang.Object[] getSections() -> getSections
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    int getLimiterType() -> f
    int[] getSortEntries() -> g
    void setSortMode(int) -> a
    int getDefaultSortMode() -> h
    int getSortMode() -> i
org.kreed.vanilla.MediaAdapter$Limiter -> g:
    java.lang.String[] names -> a
    long id -> b
    int type -> c
    java.lang.String selection -> d
org.kreed.vanilla.MediaButtonReceiver -> org.kreed.vanilla.MediaButtonReceiver:
    int sUseControls -> a
    int sInCall -> b
    long sLastClickTime -> c
    void reloadPreference(android.content.Context) -> a
    boolean useHeadsetControls(android.content.Context) -> d
    void setInCall(boolean) -> a
    boolean processKey(android.content.Context,android.view.KeyEvent) -> a
    void registerMediaButton(android.content.Context) -> b
    void unregisterMediaButton(android.content.Context) -> c
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.kreed.vanilla.MediaUtils -> h:
    java.util.Random sRandom -> a
    long[] sAllSongs -> b
    int sAllSongsIdx -> c
    org.kreed.vanilla.Song[] sRandomCache -> d
    int sRandomCacheIdx -> e
    int sRandomCacheEnd -> f
    int sSongCount -> g
    java.util.Random getRandom() -> b
    org.kreed.vanilla.QueryTask buildPlaylistQuery(long,java.lang.String[],java.lang.String) -> a
    org.kreed.vanilla.QueryTask buildGenreQuery(long,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    org.kreed.vanilla.QueryTask buildQuery(int,long,java.lang.String[],java.lang.String) -> a
    long queryGenreForSong(android.content.ContentResolver,long) -> a
    void shuffle(long[]) -> a
    void shuffle(org.kreed.vanilla.Song[],int) -> a
    void shuffle(java.util.List,boolean) -> a
    boolean isSongAvailable(android.content.ContentResolver) -> a
    void onMediaChange() -> a
    org.kreed.vanilla.Song randomSong(android.content.ContentResolver) -> b
org.kreed.vanilla.MediaView -> i:
    android.graphics.Bitmap sExpander -> a
    android.graphics.Paint sPaint -> d
    android.graphics.DashPathEffect sDashEffect -> e
    android.graphics.RadialGradient sDividerGradient -> f
    int sTextSize -> g
    int mViewHeight -> b
    android.graphics.Bitmap mLeftBitmap -> h
    android.graphics.Bitmap mRightBitmap -> i
    long mId -> j
    java.lang.String mTitle -> k
    java.lang.String mSubTitle -> l
    boolean mShowBitmaps -> m
    boolean mBottomGravity -> c
    int mTouchX -> n
    void init(android.content.Context) -> a
    void setShowBitmaps(boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    long getMediaId() -> a
    java.lang.String getTitle() -> b
    boolean isRightBitmapPressed() -> c
    void makeHeader(java.lang.String) -> a
    void updateMedia(android.database.Cursor,boolean) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
org.kreed.vanilla.MiniPlaybackActivity -> org.kreed.vanilla.MiniPlaybackActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
org.kreed.vanilla.MusicAlphabetIndexer -> j:
    int compare(java.lang.String,java.lang.String) -> compare
org.kreed.vanilla.NewPlaylistDialog -> k:
    android.widget.Button mPositiveButton -> a
    android.widget.EditText mText -> b
    boolean mAccepted -> c
    java.lang.String mInitialText -> d
    int mActionRes -> e
    android.content.Intent mIntent -> f
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getText() -> a
    android.content.Intent getIntent() -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    boolean isAccepted() -> c
    void onClick(android.view.View) -> onClick
org.kreed.vanilla.OneCellWidget -> org.kreed.vanilla.OneCellWidget:
    boolean sEnabled -> a
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void checkEnabled(android.content.Context,android.appwidget.AppWidgetManager) -> a
    void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,org.kreed.vanilla.Song,int) -> a
org.kreed.vanilla.PlaybackActivity -> org.kreed.vanilla.PlaybackActivity:
    org.kreed.vanilla.PlaybackActivity$Action mUpAction -> i
    org.kreed.vanilla.PlaybackActivity$Action mDownAction -> j
    android.os.Handler mUiHandler -> a
    android.os.Handler mHandler -> b
    android.os.Looper mLooper -> c
    org.kreed.vanilla.CoverView mCoverView -> d
    android.widget.ImageButton mPlayPauseButton -> e
    android.widget.ImageButton mShuffleButton -> f
    android.widget.ImageButton mEndButton -> g
    int mState -> h
    long mLastStateEvent -> k
    long mLastSongEvent -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    org.kreed.vanilla.PlaybackActivity$Action getAction(android.content.SharedPreferences,java.lang.String,org.kreed.vanilla.PlaybackActivity$Action) -> a
    void onStart() -> onStart
    void onResume() -> onResume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void nextSong() -> a
    void previousSong() -> b
    void playPause() -> g
    void onClick(android.view.View) -> onClick
    void onStateChange(int,int) -> a
    void setState(int) -> a
    void setState(long,int) -> a
    void onSongChange(org.kreed.vanilla.Song) -> a
    void setSong(org.kreed.vanilla.Song) -> b
    void setSong(long,org.kreed.vanilla.Song) -> a
    void replaceSong(int,org.kreed.vanilla.Song) -> a
    void onMediaChange() -> e
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean handleMessage(android.os.Message) -> handleMessage
    void cycleShuffle() -> h
    void cycleFinishAction() -> i
    void openLibrary() -> f
    void enqueue(int) -> b
    void performAction(org.kreed.vanilla.PlaybackActivity$Action) -> a
    void upSwipe() -> c
    void downSwipe() -> d
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
org.kreed.vanilla.PlaybackActivity$1 -> l:
    int val$state -> a
    int val$toggled -> b
    org.kreed.vanilla.PlaybackActivity this$0 -> c
    void run() -> run
org.kreed.vanilla.PlaybackActivity$2 -> m:
    org.kreed.vanilla.Song val$song -> a
    org.kreed.vanilla.PlaybackActivity this$0 -> b
    void run() -> run
org.kreed.vanilla.PlaybackActivity$3 -> n:
    int[] $SwitchMap$org$kreed$vanilla$PlaybackActivity$Action -> a
org.kreed.vanilla.PlaybackActivity$Action -> o:
    org.kreed.vanilla.PlaybackActivity$Action Nothing -> a
    org.kreed.vanilla.PlaybackActivity$Action Library -> b
    org.kreed.vanilla.PlaybackActivity$Action PlayPause -> c
    org.kreed.vanilla.PlaybackActivity$Action NextSong -> d
    org.kreed.vanilla.PlaybackActivity$Action PreviousSong -> e
    org.kreed.vanilla.PlaybackActivity$Action Repeat -> f
    org.kreed.vanilla.PlaybackActivity$Action Shuffle -> g
    org.kreed.vanilla.PlaybackActivity$Action EnqueueAlbum -> h
    org.kreed.vanilla.PlaybackActivity$Action EnqueueArtist -> i
    org.kreed.vanilla.PlaybackActivity$Action EnqueueGenre -> j
    org.kreed.vanilla.PlaybackActivity$Action ClearQueue -> k
    org.kreed.vanilla.PlaybackActivity$Action ToggleControls -> l
    org.kreed.vanilla.PlaybackActivity$Action[] $VALUES -> m
    org.kreed.vanilla.PlaybackActivity$Action[] values() -> a
org.kreed.vanilla.PlaybackService -> org.kreed.vanilla.PlaybackService:
    int mState -> a
    java.lang.Object mStateLock -> d
    java.lang.Object sWait -> e
    org.kreed.vanilla.PlaybackService sInstance -> f
    java.util.ArrayList sActivities -> g
    android.content.SharedPreferences sSettings -> h
    boolean mHeadsetPause -> b
    boolean mScrobble -> i
    boolean mStockBroadcast -> j
    int mNotificationMode -> k
    boolean mHeadsetOnly -> l
    boolean mHeadsetPlay -> m
    boolean mPlugInitialized -> n
    int mIdleTimeout -> o
    android.app.PendingIntent mNotificationAction -> p
    boolean mInvertNotification -> q
    android.os.Looper mLooper -> r
    android.os.Handler mHandler -> s
    android.media.MediaPlayer mMediaPlayer -> t
    boolean mMediaPlayerInitialized -> u
    android.os.PowerManager$WakeLock mWakeLock -> v
    android.app.NotificationManager mNotificationManager -> w
    android.media.AudioManager mAudioManager -> x
    org.kreed.vanilla.SongTimeline mTimeline -> y
    org.kreed.vanilla.Song mCurrentSong -> z
    boolean mPlayingBeforeCall -> c
    int mPendingSeek -> A
    org.kreed.vanilla.PlaybackService$Receiver mReceiver -> B
    org.kreed.vanilla.PlaybackService$InCallListener mCallListener -> C
    java.lang.String mErrorMessage -> D
    float mUserVolume -> E
    float mCurrentVolume -> F
    android.database.ContentObserver mObserver -> G
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.content.SharedPreferences getSettings(android.content.Context) -> a
    void setFlag(int) -> a
    void unsetFlag$13462e() -> a
    boolean isSpeakerOn() -> o
    int updateState(int) -> i
    void broadcastChange(int,org.kreed.vanilla.Song,long) -> a
    void updateNotification() -> p
    int play() -> q
    int pause() -> r
    int playPause() -> b
    int setFinishAction(int) -> b
    int cycleFinishAction() -> c
    int setShuffleMode(int) -> c
    int cycleShuffle() -> d
    org.kreed.vanilla.Song setCurrentSong(int) -> j
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    org.kreed.vanilla.Song getSong(int) -> d
    void onMediaChange() -> e
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    boolean handleMessage(android.os.Message) -> handleMessage
    int getState() -> f
    int getPosition() -> g
    void seekToProgress(int) -> e
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void activeSongReplaced(int,org.kreed.vanilla.Song) -> a
    int deleteMedia(int,long) -> a
    org.kreed.vanilla.Song nextSong() -> h
    org.kreed.vanilla.Song previousSong() -> i
    void userActionTriggered() -> j
    void addSongs(int,org.kreed.vanilla.QueryTask,int) -> a
    void enqueueFromCurrent(int) -> f
    void clearQueue() -> k
    java.lang.String getErrorMessage() -> l
    void timelineChanged() -> m
    org.kreed.vanilla.PlaybackService get(android.content.Context) -> b
    boolean hasInstance() -> n
    void addActivity(org.kreed.vanilla.PlaybackActivity) -> a
    void removeActivity(org.kreed.vanilla.PlaybackActivity) -> b
    int loadState() -> s
    void saveState(int) -> k
    int shuffleMode(int) -> g
    int finishAction(int) -> h
    android.app.PendingIntent createNotificationAction(android.content.SharedPreferences) -> a
    android.app.Notification createNotification(org.kreed.vanilla.Song,int) -> a
    boolean access$000(org.kreed.vanilla.PlaybackService) -> a
    boolean access$100(org.kreed.vanilla.PlaybackService) -> b
    boolean access$102$509109ab(org.kreed.vanilla.PlaybackService) -> c
    java.lang.Object access$200(org.kreed.vanilla.PlaybackService) -> d
org.kreed.vanilla.PlaybackService$1 -> p:
    org.kreed.vanilla.PlaybackService this$0 -> a
    void onChange(boolean) -> onChange
org.kreed.vanilla.PlaybackService$InCallListener -> q:
    org.kreed.vanilla.PlaybackService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
org.kreed.vanilla.PlaybackService$Receiver -> r:
    org.kreed.vanilla.PlaybackService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.kreed.vanilla.PlaylistActivity -> org.kreed.vanilla.PlaylistActivity:
    android.os.Looper mLooper -> a
    org.kreed.vanilla.DragListView mListView -> b
    org.kreed.vanilla.PlaylistAdapter mAdapter -> c
    long mPlaylistId -> d
    java.lang.String mPlaylistName -> e
    boolean mEditing -> f
    android.widget.Button mEditButton -> g
    android.widget.Button mDeleteButton -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.content.DialogInterface,int) -> onClick
org.kreed.vanilla.PlaylistAdapter -> s:
    java.lang.String[] PROJECTION -> a
    android.content.Context mContext -> b
    android.os.Handler mWorkerHandler -> c
    android.os.Handler mUiHandler -> d
    long mPlaylistId -> e
    boolean mEditable -> f
    android.graphics.Bitmap mDragBitmap -> g
    android.graphics.Bitmap mDeleteBitmap -> h
    void setPlaylistId(long) -> a
    void setEditable(boolean) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    boolean handleMessage(android.os.Message) -> handleMessage
    android.database.Cursor runQuery(android.content.ContentResolver) -> a
    void move(int,int) -> a
    void remove(long) -> b
org.kreed.vanilla.PreferencesActivity -> org.kreed.vanilla.PreferencesActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.kreed.vanilla.PreferencesBackupAgent -> org.kreed.vanilla.PreferencesBackupAgent:
    void onCreate() -> onCreate
org.kreed.vanilla.QueryTask -> t:
    android.net.Uri mUri -> a
    java.lang.String[] mProjection -> d
    java.lang.String mSelection -> e
    java.lang.String[] mSelectionArgs -> f
    java.lang.String mSortOrder -> b
    long mExtra -> c
    android.database.Cursor runQuery(android.content.ContentResolver) -> a
org.kreed.vanilla.Song -> u:
    java.lang.String[] EMPTY_PROJECTION -> a
    java.lang.String[] FILLED_PROJECTION -> b
    java.lang.String[] EMPTY_PLAYLIST_PROJECTION -> c
    java.lang.String[] FILLED_PLAYLIST_PROJECTION -> d
    boolean mDisableCoverArt -> e
    long id -> f
    long albumId -> g
    long artistId -> h
    java.lang.String path -> i
    java.lang.String title -> j
    java.lang.String album -> k
    java.lang.String artist -> l
    long duration -> m
    int trackNumber -> o
    int flags -> n
    int hasCover -> p
    android.graphics.BitmapFactory$Options BITMAP_OPTIONS -> q
    boolean isRandom() -> a
    void populate(android.database.Cursor) -> a
    long getId(org.kreed.vanilla.Song) -> a
    boolean hasCover(android.content.Context) -> a
    android.net.Uri getCoverUri() -> b
    android.graphics.Bitmap getCover(android.content.Context) -> b
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.kreed.vanilla.SongTimeline -> v:
    android.content.Context mContext -> h
    java.util.ArrayList mSongs -> a
    int mCurrentPos -> b
    int mShuffleMode -> c
    int mFinishAction -> d
    java.util.ArrayList mShuffledSongs -> e
    org.kreed.vanilla.Song mSavedPrevious -> i
    org.kreed.vanilla.Song mSavedCurrent -> f
    org.kreed.vanilla.Song mSavedNext -> j
    org.kreed.vanilla.SongTimeline$Callback mCallback -> g
    void readState(java.io.DataInputStream) -> a
    void writeState(java.io.DataOutputStream) -> a
    org.kreed.vanilla.Song shuffleAll() -> a
    org.kreed.vanilla.Song getSong(int) -> a
    org.kreed.vanilla.Song shiftCurrentSong(int) -> b
    int addSongs(int,android.database.Cursor,int,long) -> a
    void saveActiveSongs() -> b
    void broadcastChangedSongs() -> c
    void removeSong(long) -> a
    void changed() -> d
    boolean isEndOfQueue() -> e
org.kreed.vanilla.SongTimeline$Callback -> w:
    void activeSongReplaced(int,org.kreed.vanilla.Song) -> a
    void timelineChanged() -> m
org.kreed.vanilla.SongTimeline$FlagComparator -> x:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.kreed.vanilla.SongTimeline$IdComparator -> y:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.kreed.vanilla.VolumePreference -> org.kreed.vanilla.VolumePreference:
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
